openapi: 3.0.0
info:
  title: Customer Insight and Enhancement API
  version: 1.0.0
  description: A robust API for customer analytics and engagement using AI and ML technologies.

servers:
  - url: https://api.example.com/v1

paths:
  /customers:
    get:
      summary: List customers
      description: Retrieve a list of customers with optional filtering and pagination.
      tags:
        - customers
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            default: 1
          description: Page number for pagination
        - in: query
          name: limit
          schema:
            type: integer
            default: 20
          description: Number of items per page
        - in: query
          name: segment
          schema:
            type: string
          description: Filter customers by segment
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Customer'
                  meta:
                    type: object
                    properties:
                      total:
                        type: integer
                      page:
                        type: integer
                      limit:
                        type: integer
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'

  /customers/{customer_id}:
    get:
      summary: Get customer details
      description: Retrieve detailed information about a specific customer.
      tags:
        - customers
      parameters:
        - in: path
          name: customer_id
          required: true
          schema:
            type: integer
          description: Unique identifier of the customer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        '404':
          $ref: '#/components/responses/NotFound'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'

  /customers/{customer_id}/insights:
    get:
      summary: Get customer insights
      description: Retrieve AI-generated insights for a specific customer.
      tags:
        - customers
      parameters:
        - in: path
          name: customer_id
          required: true
          schema:
            type: integer
          description: Unique identifier of the customer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerInsights'
        '404':
          $ref: '#/components/responses/NotFound'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'

  /interactions:
    post:
      summary: Create a new interaction
      description: Record a new interaction with a customer.
      tags:
        - interactions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InteractionCreate'
      responses:
        '201':
          description: Interaction created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Interaction'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'

  /interactions/{interaction_id}:
    get:
      summary: Get interaction details
      description: Retrieve details of a specific interaction.
      tags:
        - interactions
      parameters:
        - in: path
          name: interaction_id
          required: true
          schema:
            type: integer
          description: Unique identifier of the interaction
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Interaction'
        '404':
          $ref: '#/components/responses/NotFound'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'

  /products:
    get:
      summary: List products
      description: Retrieve a list of products with optional filtering and pagination.
      tags:
        - products
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            default: 1
          description: Page number for pagination
        - in: query
          name: limit
          schema:
            type: integer
            default: 20
          description: Number of items per page
        - in: query
          name: category
          schema:
            type: string
          description: Filter products by category
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Product'
                  meta:
                    type: object
                    properties:
                      total:
                        type: integer
                      page:
                        type: integer
                      limit:
                        type: integer
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'

  /products/{product_id}:
    get:
      summary: Get product details
      description: Retrieve detailed information about a specific product.
      tags:
        - products
      parameters:
        - in: path
          name: product_id
          required: true
          schema:
            type: integer
          description: Unique identifier of the product
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '404':
          $ref: '#/components/responses/NotFound'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'

  /feedback:
    post:
      summary: Submit feedback
      description: Submit customer feedback for a product or service.
      tags:
        - feedback
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeedbackCreate'
      responses:
        '201':
          description: Feedback submitted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Feedback'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'

  /feedback/{feedback_id}:
    get:
      summary: Get feedback details
      description: Retrieve details of a specific feedback.
      tags:
        - feedback
      parameters:
        - in: path
          name: feedback_id
          required: true
          schema:
            type: integer
          description: Unique identifier of the feedback
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Feedback'
        '404':
          $ref: '#/components/responses/NotFound'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'

components:
  schemas:
    Customer:
      type: object
      properties:
        id:
          type: integer
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
          format: email
        phone:
          type: string
        segment:
          type: string
        lifetime_value:
          type: number
          format: float
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    CustomerInsights:
      type: object
      properties:
        customer_id:
          type: integer
        sentiment_score:
          type: number
          format: float
        churn_risk:
          type: number
          format: float
        next_best_offer:
          type: string
        lifetime_value_prediction:
          type: number
          format: float

    Interaction:
      type: object
      properties:
        id:
          type: integer
        customer_id:
          type: integer
        type:
          type: string
          enum: [call, email, chat, in-person]
        channel:
          type: string
        duration:
          type: integer
        notes:
          type: string
        sentiment_score:
          type: number
          format: float
        created_at:
          type: string
          format: date-time

    InteractionCreate:
      type: object
      required:
        - customer_id
        - type
        - channel
      properties:
        customer_id:
          type: integer
        type:
          type: string
          enum: [call, email, chat, in-person]
        channel:
          type: string
        duration:
          type: integer
        notes:
          type: string

    Product:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        category:
          type: string
        price:
          type: number
          format: float
        inventory_count:
          type: integer
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    Feedback:
      type: object
      properties:
        id:
          type: integer
        customer_id:
          type: integer
        product_id:
          type: integer
        rating:
          type: integer
          minimum: 1
          maximum: 5
        comment:
          type: string
        sentiment_score:
          type: number
          format: float
        created_at:
          type: string
          format: date-time

    FeedbackCreate:
      type: object
      required:
        - customer_id
        - product_id
        - rating
      properties:
        customer_id:
          type: integer
        product_id:
          type: integer
        rating:
          type: integer
          minimum: 1
          maximum: 5
        comment:
          type: string

  responses:
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    NotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

security:
  - BearerAuth: []

tags:
  - name: customers
    description: Customer management
  - name: interactions
    description: Customer interactions
  - name: products
    description: Product management
  - name: feedback
    description: Customer feedback
